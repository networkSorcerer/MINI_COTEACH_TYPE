{"version":3,"file":"342.js?ver=79d679917bc7569a77b0","mappings":"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","sources":["webpack://spotify-type/./src/configs/commonConfig.ts","webpack://spotify-type/./src/apis/authApi.ts","webpack://spotify-type/./src/hooks/useGetNewReleases.ts","webpack://spotify-type/./src/hooks/useClientCredentialToken.ts","webpack://spotify-type/./src/apis/albumApi.ts","webpack://spotify-type/./src/common/components/ErrorMessage.tsx","webpack://spotify-type/./src/common/components/PlayButton.tsx","webpack://spotify-type/./src/common/components/Card.tsx","webpack://spotify-type/./src/pages/HomePage/components/NewReleases.tsx","webpack://spotify-type/./src/pages/HomePage/styles/HomePage.style.css?8218","webpack://spotify-type/./src/pages/HomePage/HomePage.tsx","webpack://spotify-type/./src/pages/HomePage/styles/HomePage.style.css"],"sourcesContent":["export const SPOTIFY_BASE_URL = process.env.REACT_APP_SPOTIFY_BASE_URL;\r\n","import axios from \"axios\";\r\nimport { clientId, clientSecret } from \"../configs/authConfig\";\r\nimport { ClientCredentialTokenResponse } from \"../models/auth\";\r\n// import { URLSearchParams } from \"url\";\r\n\r\nconst encodedBase64 = (data: string): string => {\r\n  // Buffer가 있는 환경과 없는 환경이 있기 때문에 이렇게 처리.\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    // 브라우저 환경\r\n    return btoa(data);\r\n  } else {\r\n    // Node.js 환경\r\n    return Buffer.from(data).toString(\"base64\");\r\n  }\r\n};\r\n\r\nexport const getClientCredentialToken =\r\n  async (): Promise<ClientCredentialTokenResponse> => {\r\n    try {\r\n      const body = new URLSearchParams({\r\n        grant_type: \"client_credentials\",\r\n      });\r\n      const response = await axios.post(\r\n        \"https://accounts.spotify.com/api/token\",\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Basic ${encodedBase64(\r\n              clientId + \":\" + clientSecret\r\n            )}`,\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(\"Failed to fetch client credential token.\");\r\n    }\r\n  };\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getNewRelease } from \"../apis/albumApi\";\r\nimport useClientCredentialToken from \"./useClientCredentialToken\";\r\n\r\nconst useGetNewReleases = () => {\r\n  const clientCredentialToken = useClientCredentialToken();\r\n  return useQuery({\r\n    queryKey: [\"new-releases\"],\r\n    queryFn: () => {\r\n      if (!clientCredentialToken) {\r\n        throw new Error(\"No token available\");\r\n      }\r\n      return getNewRelease(clientCredentialToken);\r\n    },\r\n  });\r\n};\r\n\r\nexport default useGetNewReleases;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { getClientCredentialToken } from \"../apis/authApi\";\r\n\r\nconst useClientCredentialToken = (): string | undefined => {\r\n  const { data } = useQuery({\r\n    queryKey: [\"client-credential-token\"],\r\n    queryFn: getClientCredentialToken,\r\n  });\r\n  const ClientCredentialToken = data?.access_token;\r\n  return ClientCredentialToken;\r\n};\r\n\r\nexport default useClientCredentialToken;\r\n","import axios from \"axios\";\r\nimport { SPOTIFY_BASE_URL } from \"../configs/commonConfig\";\r\nimport { getNewReleaseResponse } from \"../models/album\";\r\n\r\nexport const getNewRelease = async (\r\n  clientCredentialToken: string\r\n): Promise<getNewReleaseResponse> => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${SPOTIFY_BASE_URL}/browse/new-releases?limit=6`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${clientCredentialToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch new releases\");\r\n  }\r\n};\r\n\r\nexport default getNewRelease;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\ninterface ErrorMessageProps {\r\n  errorMessage: string;\r\n}\r\n\r\nconst ErrorMessage = ({ errorMessage }: ErrorMessageProps) => {\r\n  return <Alert security=\"error\">{errorMessage}</Alert>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { styled } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst PlayButtonContainer = styled(\"div\")(({ theme }) => ({\r\n  height: \"48px\",\r\n  width: \"48px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  borderRadius: \"30px\",\r\n  cursor: \"pointer\",\r\n  backgroundColor: theme.palette.primary.main,\r\n  boxShadow: \"0 8px 8px rgba(0, 0, 0, 0.3)\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#3be477\",\r\n    transform: \"scale(1.05)\",\r\n  },\r\n}));\r\n\r\nconst PlayButton = () => {\r\n  return (\r\n    <PlayButtonContainer>\r\n      <svg viewBox=\"0 0 24 24\" width={\"24px\"}>\r\n        <path d=\"m7.05 3.606 13.49 7.788a.7.7 0 0 1 0 1.212L7.05 20.394A.7.7 0 0 1 6 19.788V4.212a.7.7 0 0 1 1.05-.606z\"></path>\r\n      </svg>\r\n    </PlayButtonContainer>\r\n  );\r\n};\r\n\r\nexport default PlayButton;\r\n","import React from \"react\";\r\nimport { styled, Typography } from \"@mui/material\";\r\nimport PlayButton from \"./PlayButton\";\r\n\r\ninterface CardProps {\r\n  image: string;\r\n  name: string;\r\n  artistName: string | undefined;\r\n}\r\n\r\nconst CardContainer = styled(\"div\")({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  gap: \"8px\",\r\n  height: \"fit-content\",\r\n  width: \"195.5px\",\r\n  maxHeight: \"292.56px\",\r\n  padding: \"12px\",\r\n  borderRadius: \"6px\",\r\n  cursor: \"pointer\",\r\n  \"&:hover\": {\r\n    transform: \"translate3d(0px, 0px, 0px)\",\r\n    backgroundColor: \"#1f1f1f\",\r\n  },\r\n  \"&:hover .albumPlayButton\": {\r\n    bottom: \"8px\",\r\n    opacity: \"1\",\r\n  },\r\n});\r\n\r\nconst AlbumCoverContainer = styled(\"div\")({\r\n  position: \"relative\",\r\n  height: \"171.5px\",\r\n  width: \"171.5px\",\r\n});\r\n\r\nconst AlbumCoverImage = styled(\"img\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  borderRadius: \"8px\",\r\n});\r\n\r\nconst AlbumInfoArea = styled(\"div\")({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  gap: \"4px\",\r\n});\r\n\r\nconst AlbumPlayButton = styled(\"div\")({\r\n  right: \"8px\",\r\n  bottom: \"0px\",\r\n  opacity: \"0\",\r\n  position: \"absolute\",\r\n  transform: \"translate3d(0px, 0px, 0px)\",\r\n  transition: \"all 0.2s ease-in-out\",\r\n});\r\n\r\nconst Card = ({ image, name, artistName }: CardProps) => {\r\n  return (\r\n    <CardContainer>\r\n      <AlbumCoverContainer>\r\n        <AlbumCoverImage src={image} alt={name} />\r\n        <AlbumPlayButton className=\"albumPlayButton\">\r\n          <PlayButton />\r\n        </AlbumPlayButton>\r\n      </AlbumCoverContainer>\r\n      <AlbumInfoArea>\r\n        <Typography variant=\"h2\">{name}</Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          {artistName || \"No Name\"}\r\n        </Typography>\r\n      </AlbumInfoArea>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Grid, styled, Typography } from \"@mui/material\";\r\nimport useGetNewReleases from \"../../../hooks/useGetNewReleases\";\r\nimport Loading from \"../../../common/components/Loading\";\r\nimport ErrorMessage from \"../../../common/components/ErrorMessage\";\r\nimport Card from \"../../../common/components/Card\";\r\n\r\nconst NewReleases = () => {\r\n  const HeaderContainer = styled(\"div\")({\r\n    height: \"56px\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"end\",\r\n    paddingInline: \"40px\",\r\n    marginBottom: \"8px\",\r\n  });\r\n\r\n  const {\r\n    data: newReleasesData,\r\n    error: newReleasesError,\r\n    isLoading: isNewReleasesLoading,\r\n  } = useGetNewReleases();\r\n\r\n  if (isNewReleasesLoading) {\r\n    <Loading />;\r\n  }\r\n\r\n  if (newReleasesError) {\r\n    return <ErrorMessage errorMessage={newReleasesError.message} />;\r\n  }\r\n\r\n  console.log(\"ddd\", newReleasesData);\r\n\r\n  return (\r\n    <div>\r\n      <HeaderContainer>\r\n        <Typography variant=\"h1\" sx={{ cursor: \"pointer\" }}>\r\n          New Releases\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"textSecondary\"\r\n          fontWeight={700}\r\n          sx={{ cursor: \"pointer\" }}\r\n        >\r\n          모두 표시\r\n        </Typography>\r\n      </HeaderContainer>\r\n      {newReleasesData && newReleasesData.albums.items.length > 0 ? (\r\n        <Grid container paddingInline={\"28px\"}>\r\n          {newReleasesData.albums.items.map((album) => (\r\n            <Grid size={{ xs: 6, sm: 4, md: 2 }} key={album.id}>\r\n              <Card\r\n                image={album.images[0].url}\r\n                name={album.name}\r\n                artistName={album.artists[0].name}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Typography variant=\"h2\">No Data</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!./HomePage.style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!./HomePage.style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\r\nimport NewReleases from \"./components/NewReleases\";\r\nimport { styled } from \"@mui/material\";\r\nimport \"./styles/HomePage.style.css\";\r\n\r\nconst HomePageWrapper = styled(\"div\")({\r\n  height: \"100%\",\r\n  borderRadius: \"8px\",\r\n  overflow: \"hidden\",\r\n});\r\n\r\nconst HomePageContainer = styled(\"div\")({\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  paddingTop: \"4px\",\r\n  borderRadius: \"8px\",\r\n  overflowX: \"hidden\",\r\n  overflowY: \"auto\",\r\n  backgroundImage: \"linear-gradient(to bottom, #212121 0%, #121212 35%)\",\r\n\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"8px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    backgroundColor: \"#ffffff4c\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb:hover\": {\r\n    backgroundColor: \"#ffffff80\",\r\n  },\r\n});\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <HomePageWrapper>\r\n      <HomePageContainer>\r\n        <NewReleases />\r\n      </HomePageContainer>\r\n    </HomePageWrapper>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Chrome, Whale, Edge */\r\n\r\n/* 스크롤바 전체 기본 꾸미기 */\r\n::-webkit-scrollbar {\r\n}\r\n\r\n/* 스크롤바 막대 꾸미기 */\r\n::-webkit-scrollbar-thumb {\r\n  width: 8px;\r\n}\r\n\r\n/* 스크롤바 트랙 꾸미기 */\r\n::-webkit-scrollbar-track {\r\n    fill: none;\r\n  background-color: rgba(255, 255, 255, 0) !important;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/HomePage/styles/HomePage.style.css\"],\"names\":[],\"mappings\":\"AAAA,wBAAwB;;AAExB,mBAAmB;AACnB;AACA;;AAEA,gBAAgB;AAChB;EACE,UAAU;AACZ;;AAEA,gBAAgB;AAChB;IACI,UAAU;EACZ,mDAAmD;AACrD\",\"sourcesContent\":[\"/* Chrome, Whale, Edge */\\r\\n\\r\\n/* 스크롤바 전체 기본 꾸미기 */\\r\\n::-webkit-scrollbar {\\r\\n}\\r\\n\\r\\n/* 스크롤바 막대 꾸미기 */\\r\\n::-webkit-scrollbar-thumb {\\r\\n  width: 8px;\\r\\n}\\r\\n\\r\\n/* 스크롤바 트랙 꾸미기 */\\r\\n::-webkit-scrollbar-track {\\r\\n    fill: none;\\r\\n  background-color: rgba(255, 255, 255, 0) !important;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["getClientCredentialToken","async","body","URLSearchParams","grant_type","axios","post","headers","Authorization","concat","data","clientId","window","btoa","Buffer","from","toString","error","Error","useGetNewReleases","clientCredentialToken","useClientCredentialToken","useQuery","queryKey","queryFn","access_token","get","process","getNewRelease","_ref","errorMessage","_jsx","Alert","security","children","PlayButtonContainer","styled","theme","height","width","display","justifyContent","alignItems","borderRadius","cursor","backgroundColor","palette","primary","main","boxShadow","transform","PlayButton","viewBox","d","CardContainer","flexDirection","gap","maxHeight","padding","bottom","opacity","AlbumCoverContainer","position","AlbumCoverImage","AlbumInfoArea","AlbumPlayButton","right","transition","image","name","artistName","_jsxs","src","alt","className","Typography","variant","color","NewReleases","HeaderContainer","paddingInline","marginBottom","newReleasesData","newReleasesError","isLoading","isNewReleasesLoading","Loading","ErrorMessage","message","console","log","sx","fontWeight","albums","items","length","Grid","container","map","album","size","xs","sm","md","Card","images","url","artists","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","HomePageWrapper","overflow","HomePageContainer","paddingTop","overflowX","overflowY","backgroundImage","HomePage","___CSS_LOADER_EXPORT___","push","module"],"sourceRoot":""}